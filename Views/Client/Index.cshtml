@model PagedList.IPagedList<ServiceManagement.Models.Client>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h3>Клиент Физическое лицо</h3>

<p>
    @Html.ActionLink(" ", "Create", "Client", new { clientType = Common.PHISICAL }, new { @class = "btn btn-primary fa fa-plus" })
</p>

@{string name = @ViewBag.Name;}
@{string surname = @ViewBag.Surname;}
@{string findby = @ViewBag.FindBy;}

@{bool firstrecord = true;}

@using (Html.BeginForm("Index", "Client", FormMethod.Get))
{
    @Html.AntiForgeryToken()
    <div class="form-inline">
        @findby :&nbsp; @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control form-control-sm" })
        <input type="submit" value="Поиск" class="btn btn-primary btn-sm" />
    </div>

    <br />

    <div>
        <table class="table  table-sm">
            @foreach (var item in Model)
            {
                if (firstrecord)
                {
                    firstrecord = false;
                    <caption>Список клиентов</caption>
                    <thead>
                        <tr class="table-active">
                            <th>
                                @Html.DisplayNameFor(model => item.Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.Surname)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.Patronimic)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.Telephone)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.ExtraInfo)
                            </th>
                            <th></th>
                        </tr>
                    </thead>

                }
                <tdata>
                    @{string _color = "table-default"; }

                    @if (item.IsDeleted)
                    {
                        _color = "table-danger";
                    }
                    else
                    {
                        _color = "table-default";
                    }
                    <tr class="@_color">
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Surname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Patronimic)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Telephone)
                        </td>
                        <td>
                            @Html.TextAreaFor(modelItem => item.ExtraInfo, 2, 3, new { @class = "form-control", @disabled = "disabled" })
                        </td>
                        <td>
                            <a class="btn btn-primary btn-sm" href="@Url.Action("Edit", new { id = item.ID })" title="Изменить"><i class="fa fa-edit"></i></a>
                            <a class="btn btn-primary btn-sm" href="@Url.Action("Details", new { id = item.ID })" title="Детали"><i class="fa fa-eye"></i></a>
                            <a class="btn btn-primary btn-sm" href="@Url.Action("Index", "ClientAddresses", new { idClient = item.ID } )" title="Адрес"><i class="fa fa-address-card"></i></a>
                            @if (!item.IsDeleted)
                            {
                                <a class="btn btn-primary btn-sm" href="@Url.Action("Delete", new { id = item.ID })" title="Удалить"><i class="fa fa-trash"></i></a>
                            }
                        </td>

                    </tr>
                </tdata>

            }
        </table>
        <br />
        Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

    </div>

}